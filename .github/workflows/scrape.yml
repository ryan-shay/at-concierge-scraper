name: scrape-appointmenttrader

on:
  schedule:
    - cron: "*/10 * * * *"   # every 10 minutes
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Restore state file (matches scraper's STATE_FILE = state.v1.json)
      - name: Restore state cache
        uses: actions/cache@v4
        with:
          path: state.v1.json
          key: state-v1-${{ github.ref_name }}
          restore-keys: |
            state-v1-

      # --- Verification: show pre-state (if any) ---
      - name: Show pre-state (verify cache restore)
        run: |
          echo "Repo: $GITHUB_REPOSITORY"
          echo "Ref:  $GITHUB_REF_NAME"
          echo "Commit: $GITHUB_SHA"
          echo "Working directory:"
          pwd
          echo "Dir listing:"
          ls -la
          if [ -f state.v1.json ]; then
            echo "::group::pre-state.v1.json"
            cat state.v1.json
            echo "::endgroup::"
          else
            echo "No pre-existing state.v1.json found (fresh seed likely)."
          fi

      - name: Install deps
        run: npm install

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run scraper
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          FIRST_RUN: "false"      # set to "false" for normal operation
          SEED_IF_EMPTY: "true"   # safety net: silently seed if cache was empty
          DEBUG_LOG: "0"          # set to "1" for verbose logging
        run: npm run scrape

      # --- Verification: show post-state before saving to cache ---
      - name: Show post-state (after run)
        run: |
          if [ -f state.v1.json ]; then
            echo "::group::post-state.v1.json"
            cat state.v1.json
            echo "::endgroup::"
          else
            echo "state.v1.json not created by the run (unexpected)."
          fi

      # Save updated state so future runs dedupe correctly
      - name: Save state cache
        uses: actions/cache@v4
        with:
          path: state.v1.json
          key: state-v1-${{ github.run_id }}
          restore-keys: |
            state-v1-
