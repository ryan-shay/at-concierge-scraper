name: scrape-appointmenttrader

on:
  schedule:
    - cron: "*/10 * * * *"        # every 10 minutes
  workflow_dispatch:

permissions:
  contents: write                 # <-- needed to push state branch

concurrency:
  group: scrape-appointmenttrader
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Pull latest state from the bot-state branch into ./state_repo
      - name: Checkout state branch (bot-state)
        uses: actions/checkout@v4
        with:
          ref: bot-state
          path: state_repo
          fetch-depth: 1

      # If the branch is empty or file missing, create a minimal state
      - name: Prepare state file
        run: |
          mkdir -p state_repo
          if [ ! -f state_repo/state.v1.json ]; then
            echo '{"version":"v1","initialized":false,"sent":{}}' > state_repo/state.v1.json
          fi
          # copy into the working dir where the scraper expects it
          cp state_repo/state.v1.json ./state.v1.json
          echo "::group::pre-state"; cat state.v1.json; echo "::endgroup::"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci || npm install

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run scraper
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          FIRST_RUN: "false"         # keep false for normal operation
          SEED_IF_EMPTY: "true"      # safety if state goes missing
          DEBUG_LOG: "0"
        run: npm run scrape

      - name: Show post-state
        run: |
          echo "::group::post-state"; cat state.v1.json; echo "::endgroup::"

      # Commit the updated state back to bot-state branch
      - name: Persist state to bot-state
        run: |
          set -e
          cp state.v1.json state_repo/state.v1.json
          cd state_repo
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add state.v1.json
          # only commit if changed
          if ! git diff --quiet --cached; then
            git commit -m "update state $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push origin HEAD:bot-state
          else
            echo "No state changes to commit."
          fi
